version: "3.8"
services:
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - 9000:9000
    volumes:
      - ${ROOT_APPDATA}/portainer:/data portainer/portainer-ce
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  plex:
    image: linuxserver/plex
    container_name: plex
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - VERSION=docker
      - UMASK_SET=022 #optional
#      - PLEX_CLAIM= #optional
    volumes:
      - ${ROOT_APPDATA}/plex:/config
      - ${ROOT_MEDIA}/tv:/tv
      - ${ROOT_MEDIA}/movies:/movies
      - ${ROOT_MEDIA}/porn:/porn
    restart: unless-stopped

  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/tautulli:/config
      - ${ROOT_APPDATA}/plex/logs:/logs
    ports:
      - 8181:8181
    restart: unless-stopped

#  deluge:
#    image: linuxserver/deluge
#    container_name: deluge
#    network_mode: host
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=${TZ}
#      - UMASK_SET=022 #optional
#      - DELUGE_LOGLEVEL=error #optional
#    volumes:
#      - ${ROOT_APPDATA}/deluge:/config
#      - ${ROOT_MEDIA}/downloads:/downloads
#      - ${ROOT_MEDIA}/porn:/porn
#      - ${ROOT_MEDIA}/movies:/movies
#      - ${ROOT_MEDIA}/tv:/tv
#      - ${ROOT_MEDIA}/other:/other
#    restart: unless-stopped

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
      - WEBUI_PORT=8080
    volumes:
      - ${ROOT_APPDATA}/qbittorrent:/config
      - ${ROOT_MEDIA}/downloads:/downloads
      - ${ROOT_MEDIA}/porn:/porn
      - ${ROOT_MEDIA}/movies:/movies
      - ${ROOT_MEDIA}/tv:/tv
      - ${ROOT_MEDIA}/other:/other
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8112:8080
    restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
#      - AUTO_UPDATE=true #optional
#      - RUN_OPTS=run options here #optional
    volumes:
      - ${ROOT_APPDATA}/jackett:/config
      - ${ROOT_APPDATA}/jackett/blackhole:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT_APPDATA}/sonarr:/config
      - ${ROOT_MEDIA}/tv:/tv
      - ${ROOT_MEDIA}/downloads:/downloads
    ports:
      - 8989:8989
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT_APPDATA}/radarr:/config
      - ${ROOT_MEDIA}/movies:/movies
      - ${ROOT_MEDIA}/downloads:/downloads
    ports:
      - 7878:7878
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022 #optional
    volumes:
      - ${ROOT_APPDATA}/bazarr:/config
      - ${ROOT_MEDIA}/movies:/movies
      - ${ROOT_MEDIA}/tv:/tv
    ports:
      - 6767:6767
    restart: unless-stopped

  nextcloud:
    image: linuxserver/nextcloud
    container_name: nextcloud
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/nextcloud:/config
      - ${ROOT_NEXTCLOUD}:/data
    ports:
      - 443:443
    restart: unless-stopped

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/heimdall:/config
    ports:
      - 80:80
    restart: unless-stopped

  homeassistant:
    container_name: home-assistant
    image: homeassistant/home-assistant:stable
    volumes:
      - ${ROOT_APPDATA}/homeassistant:/config
    environment:
      - TZ=${TZ}
    restart: unless-stopped
    network_mode: host
