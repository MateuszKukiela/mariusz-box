services:
  nordvpn:
    container_name: GlueTun-Nord
    image: qmcgaw/gluetun
    cap_add:
      - NET_ADMIN
    ports:
      - "8080:8080" # QbitTorrent UI
      - "9091:9091" # Transmission
      - "51413:51413" # Transmision
      - "51413:51413/udp" # Transmision
      - "51420:51420" # QbitTorrent
      - "51420:51420/udp" # QbitTorrent
#      - "8085:8081" #metube
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - OPENVPN_USER=${NORD_U}
      - OPENVPN_PASSWORD=${NORD_P}
      - SERVER_REGIONS=Poland
      - VPN_TYPE=openvpn
    networks:
      - mariusz-network
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: "service:nordvpn"
    container_name: QbitTorrent-Nord
    depends_on:
      - nordvpn
      - swag
    environment:
      - WEBUI_PORT=8080
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/qbittorrent:/config
      - ${ROOT_MEDIA}:/media_data
      - ${ROOT_NEXTCLOUD}/robo/files/hentai:/hentai_comics
      - ${ROOT_SSD}:/ssd
    restart: unless-stopped

  metube:
    image: ghcr.io/alexta69/metube
    container_name: metube
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/metube:/config
      - ${ROOT_MEDIA}/downloads/metube:/downloads
      - ${ROOT_MEDIA}/movies:/downloads/movies
      - ${ROOT_MEDIA}/tv:/downloads/tv
      - ${ROOT_MEDIA}/porn:/downloads/porn
      - "/etc/localtime:/etc/localtime:ro"
    ports:
        - 8085:8081
    networks:
      - mariusz-network
    depends_on:
      - swag

  sonarr:
    image: ghcr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${ROOT_APPDATA}/sonarr:/config
      - ${ROOT_MEDIA}:/media_data
    ports:
      - 8989:8989
    networks:
      - mariusz-network
    restart: unless-stopped

  radarr:
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/radarr:/config
      - ${ROOT_MEDIA}:/media_data
    ports:
      - 7878:7878
    networks:
      - mariusz-network
    restart: unless-stopped

  bazarr:
    image: ghcr.io/linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
    volumes:
      - ${ROOT_APPDATA}/bazarr:/config
      - ${ROOT_MEDIA}:/media_data
    ports:
      - 6767:6767
    networks:
      - mariusz-network
    restart: unless-stopped

  ombi:
    image: ghcr.io/linuxserver/ombi:development
    container_name: ombi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/ombi:/config
    ports:
      - 3579:3579
    networks:
      - mariusz-network
    restart: unless-stopped

#  nextcloud:
#    image: ghcr.io/linuxserver/nextcloud
#    container_name: nextcloud
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=${TZ}
#    depends_on:
#      - mariadb
#    volumes:
#      - ${ROOT_APPDATA}/nextcloud:/config
#      - ${ROOT_NEXTCLOUD}:/data
#    ports:
#      - 444:443
#    networks:
#      - mariusz-network
#    restart: unless-stopped

#  mariadb:
#    image: mariadb:10.5
#    container_name: mariadb
#    ports:
#      - 3306:3306
#    volumes:
#      - ${ROOT_APPDATA}/mariadb:/var/lib/mysql
#      - /etc/localtime:/etc/localtime:ro
#    environment:
#      - MYSQL_ROOT_PASSWORD=${PASSWORD}
#      - MYSQL_PASSWORD=${PASSWORD}
#      - MYSQL_DATABASE=nextcloud
#      - MYSQL_USER=nextcloud
#    networks:
#      - mariusz-network
#    restart: unless-stopped

  swag:
    image: lscr.io/linuxserver/swag
    container_name: swag
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - URL=januszex.net
      - SUBDOMAINS=www,bazarr,radarr,sonarr,qbittorrent,nextcloud,jellyfin,ombi,comicstreamer,prowlarr,xbvr,accounts,whisparr,metube,transmission,sabnzbd,duplicati
      - VALIDATION=http
    volumes:
      - ./swag:/config
    ports:
      - 443:443
      - 80:80
    networks:
      - mariusz-network
    restart: unless-stopped

  docker-host:
    image: qoomon/docker-host
    container_name: docker-host
    environment:
      - DOCKER_HOST=${DOCKER_HOST}
    cap_add:
      - NET_ADMIN
      - NET_RAW
    networks:
      - mariusz-network
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=022
      - NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ${ROOT_APPDATA}/jellyfin:/config
      - ${ROOT_MEDIA}/tv:/data/tv
      - ${ROOT_MEDIA}/movies:/data/movies
      - ${ROOT_MEDIA}/movies4k:/data/movies4k
      - ${ROOT_MEDIA}/downloads:/downloads
      - ${ROOT_MEDIA}/porn:/data/porn
      - ${ROOT_MEDIA}/music:/music
      - ${ROOT_APPDATA}/jellyfin/config.json:/usr/share/jellyfin/web/config.json
    ports:
      - 8097:8096
    networks:
      - mariusz-network
    devices:
      - "/dev/dri:/dev/dri"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [video]
    restart: unless-stopped

  comicstreamer:
    container_name: comicstreamer
    image: mateuszkukiela/comicstreamer:latest
    volumes:
      - ${ROOT_APPDATA}/comicstreamer:/config
      - ${ROOT_NEXTCLOUD}/robo/files/hentai:/hentai
    ports:
      - 32500:32500
    networks:
      - mariusz-network
    restart: unless-stopped

  prowlarr:
      image: ghcr.io/linuxserver/prowlarr:develop
      container_name: prowlarr
      environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      volumes:
        - ${ROOT_APPDATA}/prowlarr:/config
      ports:
        - 9696:9696
      networks:
        - mariusz-network
      restart: unless-stopped

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    container_name: sabnzbd
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/sabnzbd:/config
      - ${ROOT_MEDIA}:/media_data
      - ${ROOT_NEXTCLOUD}/robo/files/hentai:/hentai_comics
      - ${EXTERNAL_SSD}:/ssd
    ports:
      - 8089:8080
    networks:
      - mariusz-network
    restart: unless-stopped

  authelia:
    image: authelia/authelia:4.21.0
    container_name: authelia
    environment:
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/authelia:/config
    networks:
      - mariusz-network
    restart: unless-stopped

  # xbvr:
  #   image: 'ghcr.io/xbapps/xbvr:latest'
  #   container_name: xbvr
  #   environment:
  #     - UI_USERNAME=root
  #     - UI_PASSWORD=${PASSWORD}
  #     - DEO_USERNAME=root
  #     - DEO_PASSWORD=${PASSWORD}
  #   volumes:
  #     - ${ROOT_MEDIA}/porn_vr:/videos
  #     - ${ROOT_APPDATA}/xbvr:/root/.config/
  #   ports:
  #     - "9999:9999"
  #   networks:
  #     - mariusz-network
  #   restart: unless-stopped

  jfa:
      container_name: jfa
      ports:
          - "8056:8056"
      volumes:
          - ${ROOT_APPDATA}/jfa-go:/data
          - ${ROOT_APPDATA}/jellyfin:/jf
          - '/etc/localtime:/etc/localtime:ro'
      image: hrfee/jfa-go
      restart: unless-stopped
      networks:
          - mariusz-network

  # whisparr:
  #     container_name: whisparr
  #     image: ghcr.io/hotio/whisparr:v3-5d4c05e
  #     ports:
  #      - "6969:6969"
  #     environment:
  #      - PUID=${PUID}
  #      - PGID=${PGID}
  #      - UMASK=002
  #      - TZ=${TZ}
  #     volumes:
  #      - ${ROOT_APPDATA}/whisparr:/config
  #      - ${ROOT_MEDIA}/porn:/porn
  #     networks:
  #       - mariusz-network
  #     restart: unless-stopped

  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    environment:
        - WATCHTOWER_CLEANUP=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  homebridge:
    container_name: homebridge_ukasz
    image: homebridge/homebridge:latest
    restart: unless-stopped
    network_mode: host
    volumes:
      - ${ROOT_APPDATA}/homebridge_ukasz:/homebridge
    logging:
      driver: json-file
      options:
        max-size: "10mb"
        max-file: "1"

#  pihole:
#    container_name: pihole_ukasz
#    image: pihole/pihole:latest
#    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
#    ports:
#      - "53:53/tcp"
#      - "53:53/udp"
#      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
#      - "8088:80/tcp"
#    environment:
#       - TZ=${TZ}
#       - WEBPASSWORD=${PASSWORD} #'set a secure password here or it will be random'
#       - FTLCONF_LOCAL_IPV4=192.168.8.10
#       - PIHOLE_DNS_=1.1.1.2;1.0.0.2
#    # Volumes store your data between container upgrades
#    volumes:
#      - ${ROOT_APPDATA}/pihole_ukasz/pihole_app:/etc/pihole
#      - ${ROOT_APPDATA}/pihole_ukasz/pihole_dns:/etc/dnsmasq.d
#    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
#    #cap_add:
#    #  - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
#    restart: unless-stopped

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - "9443:9443"
    volumes:
      - ${ROOT_APPDATA}/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${ROOT_APPDATA}/duplicati/config:/config
      - ${ROOT_BACKUPS}:/backups
      - ${ROOT_MARIUSZ}:/source
    ports:
      - 8200:8200
    networks:
      - mariusz-network
    restart: unless-stopped

  jf-vue:
    image: jellyfin/jellyfin-vue:unstable
    container_name: "jellyfin-vue-client"
    stdin_open: true
    tty: true
    ports:
      - 3831:80
    restart: unless-stopped
    environment:
      - DEFAULT_SERVERS=https://jellyfin.januszex.net
    networks:
      - mariusz-network

  proxylive:
    container_name: proxylive
    ports:
        - 8080:8080
    restart: always
    volumes:
        - ./proxylife/application.yml:/app/application.yml:ro
    ports:
      - 8250:8080
    networks:
      - mariusz-network
    image: segator/proxylive
    devices:
      - "/dev/dri:/dev/dri"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [video]

networks:
  mariusz-network:
